name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: "hass-cli-auth-authentik"

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            platform: linux-gnu
            arch: x86_64
          - target: x86_64-unknown-linux-musl
            platform: linux-musl
            arch: x86_64
          - target: aarch64-unknown-linux-gnu
            platform: linux-gnu
            arch: arm64
          - target: aarch64-unknown-linux-musl
            platform: linux-musl
            arch: arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}

      - name: Install musl tools
        if: contains(matrix.target, 'musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Install UPX
        run: |
          sudo apt-get update
          sudo apt-get install -y upx

      - name: Build target
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Compress binary with UPX
        run: |
          upx --best --lzma target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}

      - name: Generate SHA256
        run: |
          cd target/${{ matrix.target }}/release
          sha256sum ${{ env.BINARY_NAME }} > ${{ env.BINARY_NAME }}.sha256

      - name: Upload Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}
          asset_name: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ matrix.arch }}-${{ matrix.platform }}
          asset_content_type: application/octet-stream

      - name: Upload SHA256 checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}.sha256
          asset_name: ${{ env.BINARY_NAME }}-${{ github.ref_name }}-${{ matrix.arch }}-${{ matrix.platform }}.sha256
          asset_content_type: text/plain
